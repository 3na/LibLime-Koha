#!/usr/bin/env perl

use Koha;
use Koha::Solr::IndexStrategy::MARC;
use Koha::Solr::Document::MARC;
use C4::Context;
use C4::Items qw( GetMarcWithItems );
use C4::AuthoritiesMarc qw( GetAuthority );
use File::Slurp qw( read_file );
use Getopt::Long qw( GetOptions );
use Carp;
use Encode qw(encode_utf8);

my %jump = (
    auths => {
        rules_file =>
            (C4::Context->config('basedir') . '/etc/solr/auth-index.rules'),
        export => 0,
        get_record => \&GetAuthority,
        get_list => \&pull_auths_list,
    },
    bibs => {
        rules_file =>
            (C4::Context->config('basedir') . '/etc/solr/biblio-index.rules'),
        export => 0,
        get_record => \&GetMarcWithItems,
        get_list => \&pull_bibs_list,
    },
    );

my $preamble = 1;
my $verbose  = 0;
my $optcheck = GetOptions(
    'ar|auth-rules=s' => \$jump{auths}{rules_file},
    'br|bib-rules=s'  => \$jump{bibs}{rules_file},
    'a|export-auths!' => \$jump{auths}{export},
    'b|export-bibs!'  => \$jump{bibs}{export},
    'p|preamble!'     => \$preamble,
    );

croak 'Bad options' unless $optcheck;

say '<add>' if $preamble;
for my $j ( values %jump ) {
    next unless $j->{export};

    my $rules_text = read_file( $j->{rules_file} );
    my $r = Koha::Solr::IndexStrategy::MARC->new( rules_text => $rules_text );

    my $todos = $j->{get_list}();
    for ( @$todos ) {
        my $record = $j->{get_record}($_);
        next unless $record;
        say encode_utf8( Koha::Solr::Document::MARC->new(
            record => $record, strategy => $r ));
    }
}
say '</add>' if $preamble;

exit;


sub pull_auths_list {
    return C4::Context->dbh->selectcol_arrayref(
        'SELECT authid FROM auth_header'
        );
}

sub pull_bibs_list {
    return C4::Context->dbh->selectcol_arrayref(
        'SELECT biblionumber FROM biblio'
        );
}
